module Main where

import Analyst
import Server
import Cluster

import Daml.Script

addToCluster(serverParty, clusterParty, cluster) = do
  serverId <-
    submit serverParty do
      createCmd Server with
        machine = serverParty

  requestId <-
    submit serverParty do
      exerciseCmd serverId RequestJoin with
        clusterHead = clusterParty

  submit clusterParty do
    exerciseCmd cluster ClusterJoinRequest_Approve
      with
        joinRequestId = requestId

script_test = do
  analystParty <- allocateParty "Analyst"
  clusterParty <- allocateParty "J23 DUP-B"

  machineParty1 <- allocateParty "Server1"
  machineParty2 <- allocateParty "Server2"
  machineParty3 <- allocateParty "Server3"

  analyst <- 
    submit analystParty do
      createCmd Analyst with
        user = analystParty

  cluster <-
    submit clusterParty do
      createCmd Cluster with
        clusterHead = clusterParty
        workers = []

  cluster <- addToCluster(machineParty1, clusterParty, cluster)
  cluster <- addToCluster(machineParty2, clusterParty, cluster)
  cluster <- addToCluster(machineParty3, clusterParty, cluster)

  task1 <-
    submit analystParty do
      exerciseCmd analyst PendingBacktest_Schedule with
        clusterHead = clusterParty
        name = "Task1"
        path = "/bin/tmp/lib.so"

  task2 <-
    submit analystParty do
      exerciseCmd analyst PendingBacktest_Schedule with
        clusterHead = clusterParty
        name = "Task2"
        path = "/bin/tmp/lib2.so"

  submit clusterParty do
    exerciseCmd cluster PendingBacktest_Assign with
      backtest = task1

  submit clusterParty do
    exerciseCmd cluster PendingBacktest_Assign with
      backtest = task2

  return ()
