module Main where

import Server
import Cluster
import Types(Task(..))

import Daml.Script

-- template BacktestAnalyst
--   with
--     user: Party
--   where
--     signatory user

--     controller user can
--       nonconsuming Schedule: ContractId BacktestDescription
--         with
--           router: Router
--           name: Text
--           path: Text
--         do
--           create BacktestDescription with
--             user
--             router
--             name
--             path    

-- template BacktestDescription
--   with
--     user: Party
--     router: Router
--     name: Text
--     path: Text
--   where
--     signatory user
--     ensure user /= router.router

--     controller user can
--       BacktestDescription_Cancel : ()
--         do return ()

--     controller router.router can
--       BacktestDescription_Reject : ()
--         do return ()

-- template Backtest
--   with
--     user: Party
--     server: Party
--     name: Text
--     path: Text
--   with
--     signatory user, server

addToCluster(serverParty, clusterParty, cluster) = do
  serverId <-
    submit serverParty do
      createCmd Server with
        machine = serverParty

  requestId <-
    submit serverParty do
      exerciseCmd serverId RequestJoin with
        clusterHead = clusterParty

  submit clusterParty do
    exerciseCmd cluster ClusterJoinRequest_Approve
      with
        joinRequestId = requestId
    

script_test = do
  analystParty <- allocateParty "Analyst"
  clusterParty <- allocateParty "J23 DUP-B"

  machineParty1 <- allocateParty "Server1"
  machineParty2 <- allocateParty "Server2"
  machineParty3 <- allocateParty "Server3"

  cluster <-
    submit clusterParty do
      createCmd Cluster with
        clusterHead = clusterParty
        workers = []

  cluster <- addToCluster(machineParty1, clusterParty, cluster)
  cluster <- addToCluster(machineParty2, clusterParty, cluster)
  cluster <- addToCluster(machineParty3, clusterParty, cluster)

  _ <-
    submit clusterParty do
      exerciseCmd cluster RunTask
        with
          task = Task with
              name = "Task1"
              path = "/tmp/perfect.lib"

  -- _ <-
  --   submit routerParty do
  --     exerciseCmd router RunTask with
  --       task = Task with
  --           name = "Task1"
  --           path = "/tmp/perfect.lib"

  -- _ <-
  --   submit routerParty do
  --     exerciseCmd router RunTask with
  --       task = Task with
  --           name = "Task2"
  --           path = "/tmp/perfect.lib"

  -- _ <-
  --   submit routerParty do
  --     exerciseCmd router RunTask with
  --       task = Task with
  --           name = "Task3"
  --           path = "/tmp/perfect.lib"

--   analystId <- 
--     submit analystParty do
--       createCmd BacktestAnalyst with
--         user = analystParty

--   backtestDesc <-
--     submit analystParty do
--       exerciseCmd analystId Schedule with
--         router = 
--           Router with
--             router = routerParty
--             servers = [server1, server2, server3]
--         name = "Perfect Strategy"
--         path = "C:/temp/strat.dll"

--   submit analystParty do
--     exerciseCmd backtestDesc BacktestDescription_Cancel

  return ()
